Question:

Given a function fn, an array of arguments args, and an interval time t, return a cancel function cancelFn.

After a delay of cancelTimeMs, the returned cancel function cancelFn will be invoked.

setTimeout(cancelFn, cancelTimeMs)
The function fn should be called with args immediately and then called again every t milliseconds until cancelFn is called at cancelTimeMs ms.

Solution:

function intervalFunction(fn, args, t, cancelTimeMs) {
    fn(...args);

    const intervalId = setInterval(() => fn(...args), t);

    const cancelFn = () => clearInterval(intervalId);
    setTimeout(cancelFn, cancelTimeMs);

    return cancelFn;
}
